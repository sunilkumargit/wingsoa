<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	
    
    xmlns:telerik="clr-namespace:Telerik.Windows.Controls;assembly=Wing.Windows.Controls"
    xmlns:telerikPrimitives="clr-namespace:Telerik.Windows.Controls.Primitives;assembly=Wing.Windows.Controls"
    xmlns:dragDrop="clr-namespace:Telerik.Windows.Controls.DragDrop;assembly=Wing.Windows.Controls"
    xmlns:animation="clr-namespace:Telerik.Windows.Controls.Animation;assembly=Wing.Windows.Controls"
    xmlns:telerikChromes="clr-namespace:Telerik.Windows.Controls.Chromes;assembly=Wing.Windows.Controls"
    xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:telerikTransitions="clr-namespace:Telerik.Windows.Controls.TransitionEffects;assembly=Wing.Windows.Controls"
    xmlns:telerikTransitonControl="clr-namespace:Telerik.Windows.Controls.TransitionControl;assembly=Wing.Windows.Controls"
	xmlns:telerikQuickStart="clr-namespace:Telerik.Windows.Controls.QuickStart;assembly=Wing.Windows.Controls"
    xmlns:filteringEditors="clr-namespace:Telerik.Windows.Controls.Filtering.Editors;assembly=Wing.Windows.Controls"
	
    
 >

	<SolidColorBrush x:Key="ControlOuterBorder_Disabled" Color="#FF9BB0CD" />
<SolidColorBrush x:Key="ControlInnerBorder_Disabled" Color="Transparent" />
<SolidColorBrush x:Key="ControlBackground_Disabled" Color="#FFE2F0FD" />
<SolidColorBrush x:Key="ControlElement_Disabled" Color="#FF8D8D8D" />
<SolidColorBrush x:Key="ControlOuterBorder_MouseOver" Color="#FFFFC92B" />
<SolidColorBrush x:Key="ControlInnerBorder_MouseOver" Color="#FFFFFFFF" />
<LinearGradientBrush x:Key="ControlBackground_MouseOver" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFBDA" Offset="0"/>
        <GradientStop Color="#FFFEEBAE" Offset="0.50"/>
        <GradientStop Color="#FFFFD25A" Offset="0.50"/>
        <GradientStop Color="#FFFFFBA3" Offset="1"/>
    </LinearGradientBrush>
<SolidColorBrush x:Key="ControlElement_MouseOver" Color="#FF3C6AA3" />
<LinearGradientBrush x:Key="ControlOuterBorder_Pressed" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FF616161" Offset="0"/>
		<GradientStop Color="#FF989898" Offset="1"/>
	</LinearGradientBrush>
<LinearGradientBrush x:Key="ControlInnerBorder_Pressed" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFB69A78"/>
		<GradientStop Color="#FFFFE17A" Offset="0.126"/>
	</LinearGradientBrush>
<LinearGradientBrush x:Key="ControlBackground_Pressed" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFFFDCAB" Offset="0"/>
		<GradientStop Color="#FFFFD18F" Offset="0.5"/>
		<GradientStop Color="#FFFE9227" Offset="0.5"/>
		<GradientStop Color="#FFFFBA74" Offset="0"/>
	</LinearGradientBrush>
<SolidColorBrush x:Key="ControlElement_Pressed" Color="#FF000000" />
<SolidColorBrush x:Key="ControlOuterBorder_Normal" Color="#FF83A5D2" />
<LinearGradientBrush x:Key="ControlBackground_Normal" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFEBF3FF"/>
		<GradientStop Color="#FFCAE1FF" Offset="0.5"/>
		<GradientStop Color="#FFA1C5F2" Offset="0.5"/>
		<GradientStop Color="#FFD0F3FF" Offset="1"/>
	</LinearGradientBrush>
<SolidColorBrush x:Key="ControlInnerBorder_Normal" Color="#FFFFFFFF" />
<SolidColorBrush x:Key="ControlElement_Normal" Color="#FF3C6AA3" />
<SolidColorBrush x:Key="FocusBrush" Color="#ffbd69" />
<CornerRadius x:Key="Expander_HeaderBorderRadiusDown">2 2 0 0</CornerRadius>
<CornerRadius x:Key="Expander_HeaderBorderRadiusUp">0 0 2 2</CornerRadius>
<CornerRadius x:Key="Expander_HeaderBorderRadiusLeft">0 2 2 0</CornerRadius>
<CornerRadius x:Key="Expander_HeaderBorderRadiusRight">2 0 0 2</CornerRadius>
<CornerRadius x:Key="Expander_BorderRadius">3</CornerRadius>
<SolidColorBrush x:Key="BorderInnerBrush" Color="#FFABC1DE" />
<SolidColorBrush x:Key="Expander_HeaderBackground" Color="#00FFFFFF" />
<SolidColorBrush x:Key="Expander_HeaderBorderBrush" Color="#00FFFFFF" />
<Thickness x:Key="Expander_HeaderBorderThickness">0</Thickness>
<CornerRadius x:Key="Expander_HeaderBorderRadius">2</CornerRadius>
<SolidColorBrush x:Key="Expander_Background" Color="#00FFFFFF" />
<SolidColorBrush x:Key="Expander_BorderBrush" Color="#00FFFFFF" />
<Thickness x:Key="Expander_BorderThickness">0</Thickness>

	

	<telerik:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

	

	<ControlTemplate TargetType="telerik:RadExpanderDecorator" x:Key="ExpanderDecoratorTemplate">
		<Grid x:Name="root" Background="{TemplateBinding Background}"
			 >
			
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterCircle"
									Storyboard.TargetProperty="Stroke" Duration="0:0:0">
								<DiscreteObjectKeyFrame KeyTime="0:0:0"
										Value="{StaticResource ControlOuterBorder_Disabled}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerCircle"
									Storyboard.TargetProperty="Stroke" Duration="0:0:0">
								<DiscreteObjectKeyFrame KeyTime="0:0:0"
										Value="{StaticResource ControlInnerBorder_Disabled}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterCircle"
									Storyboard.TargetProperty="Fill" Duration="0:0:0">
								<DiscreteObjectKeyFrame KeyTime="0:0:0"
										Value="{StaticResource ControlBackground_Disabled}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="arrow"
									Storyboard.TargetProperty="Fill" Duration="0">
								<DiscreteObjectKeyFrame KeyTime="0"
										Value="{StaticResource ControlElement_Disabled}" />
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Highlighted">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterCircle"
									Storyboard.TargetProperty="Stroke" Duration="0:0:0">
								<DiscreteObjectKeyFrame KeyTime="0:0:0"
										Value="{StaticResource ControlOuterBorder_MouseOver}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerCircle"
									Storyboard.TargetProperty="Stroke" Duration="0:0:0">
								<DiscreteObjectKeyFrame KeyTime="0:0:0"
										Value="{StaticResource ControlInnerBorder_MouseOver}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterCircle"
									Storyboard.TargetProperty="Fill" Duration="0:0:0">
								<DiscreteObjectKeyFrame KeyTime="0:0:0"
										Value="{StaticResource ControlBackground_MouseOver}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="arrow"
									Storyboard.TargetProperty="Fill" Duration="0">
								<DiscreteObjectKeyFrame KeyTime="0"
										Value="{StaticResource ControlElement_MouseOver}" />
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterCircle"
									Storyboard.TargetProperty="Stroke" Duration="0:0:0">
								<DiscreteObjectKeyFrame KeyTime="0:0:0"
										Value="{StaticResource ControlOuterBorder_Pressed}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerCircle"
									Storyboard.TargetProperty="Stroke" Duration="0:0:0">
								<DiscreteObjectKeyFrame KeyTime="0:0:0"
										Value="{StaticResource ControlInnerBorder_Pressed}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterCircle"
									Storyboard.TargetProperty="Fill" Duration="0:0:0">
								<DiscreteObjectKeyFrame KeyTime="0:0:0"
										Value="{StaticResource ControlBackground_Pressed}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="arrow"
									Storyboard.TargetProperty="Fill" Duration="0">
								<DiscreteObjectKeyFrame KeyTime="0"
										Value="{StaticResource ControlElement_Pressed}" />
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="IsExpandedStates">
					<VisualStateGroup.Transitions>
						<VisualTransition GeneratedDuration="0:0:0.2" To="Collapsed" />
						<VisualTransition GeneratedDuration="0:0:0.2" To="Expanded" />
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Collapsed" />
					<VisualState x:Name="Expanded">
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="expandRotation"
									Storyboard.TargetProperty="Angle" To="180" />
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="ExpandDirectionStates">
					<VisualStateGroup.Transitions>
						<VisualTransition GeneratedDuration="0:0:0.2" To="DirectionUp" />
						<VisualTransition GeneratedDuration="0:0:0.2" To="DirectionDown" />
						<VisualTransition GeneratedDuration="0:0:0.2" To="DirectionLeft" />
						<VisualTransition GeneratedDuration="0:0:0.2" To="DirectionRight" />
					</VisualStateGroup.Transitions>
					<VisualState x:Name="DirectionDown" />
					<VisualState x:Name="DirectionUp">
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="directionRotation"
									Storyboard.TargetProperty="Angle" To="180" />
						</Storyboard>
					</VisualState>
					<VisualState x:Name="DirectionLeft">
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="directionRotation"
									Storyboard.TargetProperty="Angle" To="90" />
						</Storyboard>
					</VisualState>
					<VisualState x:Name="DirectionRight">
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="directionRotation"
									Storyboard.TargetProperty="Angle" To="-90" />
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			
			<Ellipse x:Name="OuterCircle" Width="20" Height="20"
					Stroke="{StaticResource ControlOuterBorder_Normal}" HorizontalAlignment="Center"
					VerticalAlignment="Center" Fill="{StaticResource ControlBackground_Normal}" />
			<Ellipse x:Name="InnerCircle" Width="18" Height="18"
					Stroke="{StaticResource ControlInnerBorder_Normal}" HorizontalAlignment="Center"
					VerticalAlignment="Center" />
			<Grid x:Name="arrowHolder" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center"
					VerticalAlignment="Center">
				<Grid.RenderTransform>
					<RotateTransform x:Name="expandRotation" Angle="0" />
				</Grid.RenderTransform>
				<Path x:Name="arrow" Fill="{StaticResource ControlElement_Normal}" Width="8"
						Height="4" Stretch="None"
						Data="M0,0 L0.67,0 4,2.67 7.25,0 8,0 8,0.67 4,4 0,0.75 z"
						RenderTransformOrigin="0.5,0.5">
					<Path.RenderTransform>
						<RotateTransform x:Name="directionRotation" Angle="0" />
					</Path.RenderTransform>
				</Path>
			</Grid>
		</Grid>
		
	</ControlTemplate>

	<ControlTemplate TargetType="telerik:RadExpanderHeader" x:Key="ExpanderHeaderTemplate">
		<Grid Background="{TemplateBinding Background}"
			 >
			
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="FocusStates">
					<VisualStateGroup.Transitions>
						<VisualTransition GeneratedDuration="0:0:0.2" To="Focused" />
						<VisualTransition GeneratedDuration="0:0:0.2" To="Unfocused" />
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Unfocused" />
					<VisualState x:Name="Focused">
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="FocusDecorator"
									Storyboard.TargetProperty="Opacity" To="1" />
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="MouseOver" />
					<VisualState x:Name="Pressed" />
					<VisualState x:Name="Disabled">
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.5"
									Storyboard.TargetName="content" Duration="0:0:0.2" />
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="IsExpandedStates">
					<VisualState x:Name="Collapsed" />
					<VisualState x:Name="Expanded" />
				</VisualStateGroup>
				<VisualStateGroup x:Name="ExpandDirectionStates">
					<VisualState x:Name="DirectionDown">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="decorator"
									Storyboard.TargetProperty="(Grid.Column)">
								<DiscreteObjectKeyFrame KeyTime="0" Value="0" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="content"
									Storyboard.TargetProperty="Margin">
								<DiscreteObjectKeyFrame KeyTime="0" Value="4,2,2,2" />
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="DirectionUp">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="decorator"
									Storyboard.TargetProperty="(Grid.Column)">
								<DiscreteObjectKeyFrame KeyTime="0" Value="0" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="content"
									Storyboard.TargetProperty="Margin">
								<DiscreteObjectKeyFrame KeyTime="0" Value="4,2,2,2" />
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="DirectionLeft">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="decorator"
									Storyboard.TargetProperty="(Grid.Row)">
								<DiscreteObjectKeyFrame KeyTime="0" Value="0" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="content"
									Storyboard.TargetProperty="Margin">
								<DiscreteObjectKeyFrame KeyTime="0" Value="2,4,2,2" />
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="DirectionRight">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="decorator"
									Storyboard.TargetProperty="(Grid.Row)">
								<DiscreteObjectKeyFrame KeyTime="0" Value="0" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="content"
									Storyboard.TargetProperty="Margin">
								<DiscreteObjectKeyFrame KeyTime="0" Value="2,4,2,2" />
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			
			<Border x:Name="HeaderBorder"
					Background="{TemplateBinding Background}"
					BorderBrush="{TemplateBinding BorderBrush}"
					BorderThickness="{TemplateBinding BorderThickness}"
					CornerRadius="{TemplateBinding CornerRadius}"
					Padding="{TemplateBinding Padding}">
				<Grid Background="Transparent"
					
					UseLayoutRounding="False"
					 >
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<telerik:RadExpanderDecorator
						x:Name="decorator"
						Grid.Row="1" Grid.Column="1" Margin="0"
						IsPressed="{TemplateBinding IsPressed}"
						IsExpanded="{TemplateBinding IsExpanded}"
						IsHighlighted="{TemplateBinding IsMouseOver}"
						ExpandDirection="{TemplateBinding ExpandDirection}"
						Template="{TemplateBinding DecoratorTemplate}" />
					<ContentPresenter
						x:Name="content"
						Grid.Row="1" Grid.Column="1" Margin="2"
						VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
						Content="{TemplateBinding Content}"
						ContentTemplate="{TemplateBinding ContentTemplate}"
						 />
				</Grid>
			</Border>
			<Rectangle x:Name="FocusDecorator" Stroke="{StaticResource FocusBrush}"
					StrokeDashArray="1 2" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />
		</Grid>
		
	</ControlTemplate>

	<ControlTemplate TargetType="telerik:RadExpander" x:Key="ExpanderTemplate">
		<Grid>
			
			<vsm:VisualStateManager.VisualStateGroups>
				<vsm:VisualStateGroup x:Name="CommonStateGroup">
					<vsm:VisualState x:Name="Normal" />
					<vsm:VisualState x:Name="Disabled" />
				</vsm:VisualStateGroup>
				<vsm:VisualStateGroup x:Name="ExpandStateGroup">
					<VisualState x:Name="Expanded" />
					<vsm:VisualState x:Name="Collapsed" />
				</vsm:VisualStateGroup>
				<VisualStateGroup x:Name="ExpandDirectionStates">
					<VisualState x:Name="DirectionDown">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderButton"
									Storyboard.TargetProperty="(Grid.Row)">
								<DiscreteObjectKeyFrame KeyTime="0" Value="0" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderButton"
									Storyboard.TargetProperty="CornerRadius">
								<DiscreteObjectKeyFrame KeyTime="0"
										Value="{StaticResource Expander_HeaderBorderRadiusDown}" />
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="DirectionUp">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderButton"
									Storyboard.TargetProperty="(Grid.Row)">
								<DiscreteObjectKeyFrame KeyTime="0" Value="2" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderButton"
									Storyboard.TargetProperty="CornerRadius">
								<DiscreteObjectKeyFrame KeyTime="0"
										Value="{StaticResource Expander_HeaderBorderRadiusUp}" />
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="DirectionLeft">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderButton"
									Storyboard.TargetProperty="(Grid.Column)">
								<DiscreteObjectKeyFrame KeyTime="0" Value="2" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderButton"
									Storyboard.TargetProperty="CornerRadius">
								<DiscreteObjectKeyFrame KeyTime="0"
										Value="{StaticResource Expander_HeaderBorderRadiusLeft}" />
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="DirectionRight">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderButton"
									Storyboard.TargetProperty="(Grid.Column)">
								<DiscreteObjectKeyFrame KeyTime="0" Value="0" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderButton"
									Storyboard.TargetProperty="CornerRadius">
								<DiscreteObjectKeyFrame KeyTime="0"
										Value="{StaticResource Expander_HeaderBorderRadiusRight}" />
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</vsm:VisualStateManager.VisualStateGroups>
			
			<Border BorderBrush="{TemplateBinding BorderBrush}"
					BorderThickness="{TemplateBinding BorderThickness}"
					CornerRadius="{StaticResource Expander_BorderRadius}"
				 >
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<Border Grid.RowSpan="9" Grid.ColumnSpan="9" CornerRadius="2"
							BorderBrush="{StaticResource BorderInnerBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							
							UseLayoutRounding="true"
							 />
						<telerik:RadExpanderHeader x:Name="HeaderButton" Margin="1" Grid.Row="1"
								Grid.Column="1" Template="{TemplateBinding HeaderControlTemplate}"
								Content="{TemplateBinding Header}"
								ContentTemplate="{TemplateBinding HeaderTemplate}"
								DecoratorTemplate="{TemplateBinding DecoratorTemplate}"
								ClickMode="{TemplateBinding ClickMode}"
								ExpandDirection="{TemplateBinding ExpandDirection}"
								FontSize="{TemplateBinding FontSize}"
								FontStyle="{TemplateBinding FontStyle}"
								FontWeight="{TemplateBinding FontWeight}"
								FontFamily="{TemplateBinding FontFamily}"
								FontStretch="{TemplateBinding FontStretch}" IsTabStop="True"
								
								IsExpanded="{TemplateBinding IsExpanded}"
								
								 />
						<Rectangle
								x:Name="Fix_BlendNotToCrashOnBindingViaRelativeSourceAndConverter"
								DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
								Visibility="{Binding Path=IsExpanded, Converter={StaticResource BooleanToVisibilityConverter}, Mode=TwoWay}"
								/>
						<ContentPresenter
								x:Name="Content"
								Grid.Row="1" Grid.Column="1"
								Margin="{TemplateBinding Padding}"
								Content="{TemplateBinding Content}"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Visibility="{Binding Path=Visibility, ElementName=Fix_BlendNotToCrashOnBindingViaRelativeSourceAndConverter, Mode=TwoWay}"/>
				</Grid>
			</Border>
		</Grid>
		
	</ControlTemplate>

	<Style TargetType="telerik:RadExpanderDecorator"
		 >
		<Setter Property="ExpandDirection" Value="Down" />
		<Setter Property="IsExpanded" Value="false" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="IsTabStop" Value="false" />
		<Setter Property="Template" Value="{StaticResource ExpanderDecoratorTemplate}" />
	</Style>

	<Style TargetType="telerik:RadExpanderHeader"
		 >
		<Setter Property="ExpandDirection" Value="Down" />
		<Setter Property="IsExpanded" Value="false" />
		<Setter Property="IsThreeState" Value="false" />
		<Setter Property="Padding" Value="2,1,2,1" />
		<Setter Property="Background" Value="{StaticResource Expander_HeaderBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource Expander_HeaderBorderBrush}" />
		<Setter Property="BorderThickness" Value="{StaticResource Expander_HeaderBorderThickness}" />
		<Setter Property="CornerRadius" Value="{StaticResource Expander_HeaderBorderRadius}" />
		<Setter Property="Template" Value="{StaticResource ExpanderHeaderTemplate}" />
		<Setter Property="DecoratorTemplate" Value="{StaticResource ExpanderDecoratorTemplate}" />
		
	</Style>

	<Style TargetType="telerik:RadExpander"
		 >
		<Setter Property="IsTabStop" Value="false" />
		<Setter Property="IsExpanded" Value="false" />
		<Setter Property="ExpandDirection" Value="Down" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="Background" Value="{StaticResource Expander_Background}" />
		<Setter Property="BorderBrush" Value="{StaticResource Expander_BorderBrush}" />
		<Setter Property="BorderThickness" Value="{StaticResource Expander_BorderThickness}" />
		<Setter Property="Padding" Value="2" />
		<Setter Property="Template" Value="{StaticResource ExpanderTemplate}" />
		<Setter Property="DecoratorTemplate" Value="{StaticResource ExpanderDecoratorTemplate}" />
		<Setter Property="HeaderControlTemplate" Value="{StaticResource ExpanderHeaderTemplate}" />
		
		<Setter Property="animation:AnimationManager.AnimationSelector">
			<Setter.Value>
				<animation:AnimationSelector>
					<animation:ExpanderExpandCollapseAnimation AnimationName="Expand" Direction="In"
							TargetElementName="Content" />
					<animation:ExpanderExpandCollapseAnimation AnimationName="Collapse"
							Direction="Out" TargetElementName="Content" />
				</animation:AnimationSelector>
			</Setter.Value>
		</Setter>
		
	</Style>

	

</ResourceDictionary>